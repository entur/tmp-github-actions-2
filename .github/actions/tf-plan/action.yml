name: 'Terraform setup and plan'
description: 'Setup Terraform and creates plan'
inputs:
  tf_directory:
    description: 'Directory that holds Terraform code'
    required: true
    default: terraform
  tf_version:
    description: 'Terraform Version'
    required: true
    default: 1.5.7
  github_token:
    description: 'GitHub token for auth'
    required: true
  workload_identity_provider:
    description: 'Workload identity provider name'
    required: false
  google_service_account:
    description: 'GCP service account'
    required: false
  environment:
    description: 'Environment'
    required: true
  provider_name:
    description: provider_name
    required: true
  sa_email:
    description: sa_email
    required: true
  cluster_project_id:
    description: cluster_project_id
    required: true
  cluster_name:
    description: cluster_name
    required: true
  cluster_location:
    description: cluster_location
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ inputs.tf_version }}
        terraform_wrapper: false

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{ inputs.provider_name }}
        service_account: ${{ inputs.sa_email }}

    - id: 'get-credentials'
      uses: 'google-github-actions/get-gke-credentials@v1'
      with:
        project_id: ${{ inputs.cluster_project_id }}
        cluster_name: ${{ inputs.cluster_name }}
        location: ${{ inputs.cluster_location }}

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0.6.0'

    - name: Terraform Init
      id: init
      working-directory: ${{ inputs.tf_directory }}
      shell: bash
      run: |
        terraform init

    - name: Terraform Workspace
      id: init
      working-directory: ${{ inputs.tf_directory }}
      shell: bash
      run: |
        terraform workspace select ${{ inputs.environment }}

    - name: Terraform Plan
      id: plan
      working-directory: ${{ inputs.tf_directory }}
      shell: bash
      run: |
        echo 'plan<<EOF' >> $GITHUB_OUTPUT
        terraform plan --var-file=env/${{ inputs.environment }}.tfvars -no-color -out=tfplan-${{ inputs.environment }} >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Save Artifact
      id: save-artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ github.event.pull_request.number }}-tf-plan
        path: ${{ inputs.tf_directory }}/tfplan-${{ inputs.environment }}

    - name: Comment Plan
      id: comment-plan
      uses: peter-evans/create-or-update-comment@v2
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Terraform Plan for ${{ inputs.environment }}:

          ```tf
          ${{ steps.plan.outputs.plan }}
          ```

          Plan saved to GH artifacts.
