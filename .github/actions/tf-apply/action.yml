name: "Terraform setup and apply"
description: "Applys a terraform plan file from an artifact"
inputs:
  tf_directory:
    description: 'Directory that holds Terraform code'
    required: true
    default: terraform
  tf_version:
    description: 'Terraform Version'
    required: true
    default: 1.5.7
  github_token:
    description: 'GitHub token for auth'
    required: true
  workload_identity_provider:
    description: 'Workload identity provider name'
    required: false
  google_service_account:
    description: 'GCP service account'
    required: false
  pr_id:
    description: 'Pull request ID'
    required: true
  environment:
    description: 'Environment'
    required: true
  provider_name:
    description: provider_name
    required: true
  sa_email:
    description: sa_email
    required: true
  cluster_project_id:
    description: cluster_project_id
    required: true
  cluster_name:
    description: cluster_name
    required: true
  cluster_location:
    description: cluster_location
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ inputs.tf_version }}
        terraform_wrapper: false

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{ inputs.provider_name }}
        service_account: ${{ inputs.sa_email }}

    - id: 'get-credentials'
      uses: 'google-github-actions/get-gke-credentials@v1'
      with:
        project_id: ${{ inputs.cluster_project_id }}
        cluster_name: ${{ inputs.cluster_name }}
        location: ${{ inputs.cluster_location }}

    - name: Terraform Init
      id: init
      working-directory: ${{ inputs.tf_directory }}
      shell: bash
      run: |
        terraform init

    - name: Download Plan
      id: download-plan
      uses: dawidd6/action-download-artifact@v2.28.0
      with:
        pr: ${{ inputs.pr_id }}
        workflow: ci.yml
        name: ${{ inputs.pr_id }}-tf-plan
        path: ${{ inputs.tf_directory }}

    - name: Terraform Apply
      id: apply
      working-directory: ${{ inputs.tf_directory }}
      shell: bash
      run: |
        echo 'apply<<EOF' >> $GITHUB_OUTPUT
        terraform apply -input=false -no-color tfplan-${{ inputs.environment }} >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Comment Apply
      id: comment-apply
      uses: peter-evans/create-or-update-comment@v2
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ inputs.pr_id }}
        body: |
          Terraform Apply for ${{ inputs.environment }}:

          ```tf
          ${{ steps.apply.outputs.apply }}
          ```
