name: 'Terraform setup and plan'
description: 'Setup Terraform and creates plan'
inputs:
  watch:
    description: "Watch directory for app source"
    default: "src"
  release_name:
    description: "The release name"
    required: true
  namespace:
    description: "The namespace to use"
    required: true
  image_tag:
    description: "The image tag to deploy"
  github_token:
    description: Github token
    required: true
  environment:
    description: "The target environment"
    required: true
runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
    - id: filter
      uses: dorny/paths-filter@v2
      name: Check if tag generated
      with:
        filters: |
          new_tag:
            - '${{ inputs.watch }}/**'
          need_deploy:
            - 'terraform/**'
            - 'helm/**'
    - id: install
      uses: azure/setup-helm@v3
      name: Install Helm
      with:
        version: v3.13.1
    - id: deploy-given-tag
      name: Deploy given tag
      if: inputs.image_tag != ''
      shell: bash
      run: |
        helm upgrade ${{ inputs.release_name }} helm/${{ inputs.namespace }}/ \
          -f helm/${{ inputs.release_name}}/env/values-${{ inputs.environment }}.yaml \
          --namespace ${{ inputs.namespace }} \
          --set common.container.image=eu.gcr.io/entur-system-1287/${{ inputs.release_name }}:${{ inputs.image_tag }} \
          --atomic
        kubectl -n ${{ inputs.namespace }} rollout status deployment/${{ inputs.release_name}}
        kubectl -n ${{ inputs.namespace }} get services -o wide
    - id: deploy-new-tag
      name: Deploy new tag
      if: inputs.image_tag == '' && steps.filter.outputs.new_tag == 'true'
      shell: bash
      run: |
        helm upgrade ${{ inputs.release_name }} helm/${{ inputs.namespace }}/ \
          -f helm/${{ inputs.release_name}}/env/values-${{ inputs.environment }}.yaml \
          --namespace ${{ inputs.namespace }} \
          --set common.container.image=eu.gcr.io/entur-system-1287/${{ inputs.release_name }}:${{ github.events.pull_request.number }}-pr \
          --atomic
        kubectl -n ${{ inputs.namespace }} rollout status deployment/${{ inputs.release_name}}
        kubectl -n ${{ inputs.namespace }} get services -o wide
    - id: deploy-without-tag
      name: Deploy without tag
      if: inputs.image_tag == '' && steps.filter.outputs.new_tag == 'false' && steps.filter.outputs.need_deploy == 'true'
      shell: bash
      run: |
        helm upgrade ${{ inputs.release_name }} helm/${{ inputs.namespace }}/ \
          -f helm/${{ inputs.release_name}}/env/values-${{ inputs.environment }}.yaml \
          --namespace ${{ inputs.namespace }} \
          --atomic
        kubectl -n ${{ inputs.namespace }} rollout status deployment/${{ inputs.release_name}}
        kubectl -n ${{ inputs.namespace }} get services -o wide
    - id: set-git-tag
      name: Set Git tag
      uses: weareyipyip/walking-tag-action@v2
      if: steps.filter.outputs.new_tag == 'true'
      with:
        tag-name: current-${{ inputs.environment }}
        tag-message: The current ${{ inputs.environment }} release is based on this commit
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
