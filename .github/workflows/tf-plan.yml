name: Terraform Plan

on:
  workflow_call:
    inputs:
      tf_version:
        required: false
        type: string
        default: 1.1.0
      environment:
        required: true
        type: string
        default: ci_dev

jobs:
  paths_filter:
    name: Check terraform changes
    permissions:
      pull-requests: 'read'
    runs-on: ubuntu-latest
    outputs:
      terraform: ${{ steps.filter.outputs.terraform }}
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          terraform:
            - 'terraform/**'
  terraform_plan:
    permissions:
      contents: 'read'
      id-token: 'write'
      pull-requests: write
    needs: paths_filter
    if: ${{ github.event.review.state != 'approved' && needs.paths_filter.outputs.terraform == 'true' }}
    runs-on: ubuntu-latest
    environment: ci_${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v3

      - name: Get PR ID
        id: pr-id
        shell: bash
        env:
          GITHUB_REF: ${{ inputs.github_ref }}
        run: |
          PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT

      - name: Terraform Plan
        uses: entur/tmp-github-actions-2/.github/actions/tf-plan@master
        with:
          tf_directory: "terraform"
          tf_version: ${{ inputs.tf_version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_id: ${{ steps.pr-id.outputs.PR_NUMBER }}
          environment: ${{ inputs.environment }}
          provider_name: ${{ secrets[format('{}_PROVIDER_NAME', inputs.environment)] }}
          sa_email: ${{ secrets[format('{}_SA_EMAIL', inputs.environment)] }}
          cluster_project_id: ${{ secrets[format('{}_CLUSTER_PROJECT_ID', inputs.environment)] }}
          cluster_name: ${{ secrets[format('{}_CLUSTER_NAME', inputs.environment)] }}
          cluster_location: ${{ secrets[format('{}_CLUSTER_LOCATION', inputs.environment)] }}
