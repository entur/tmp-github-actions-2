name: Helm Deploy

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: "The release name"
        required: true
        type: string
      namespace:
        description: "The namespace to use"
        required: true
        type: string
      image_tag:
        description: "The image tag to deploy"
        required: true
        type: string
        default: "1.0.0"
      environment:
        description: "The target environment"
        required: true
        type: environment
  workflow_call:
    inputs:
      release_name:
        description: "The release name"
        required: true
        type: string
      namespace:
        description: "The namespace to use"
        required: true
        type: string
      image_tag:
        description: "The image tag to deploy"
        required: true
        type: string
        default: "1.0.0"
      environment:
        description: "The target environment"
        required: true
        type: string

jobs:
  helm-deploy:
    environment: ${{ inputs.environment }}
    permissions:
      contents: 'read'
      id-token: 'write'
      pull-requests: write
    runs-on: ubuntu-latest
    # if: github.event.review.state != 'approved'
    steps:
      - uses: actions/checkout@v4
      # - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      #   with:
      #     version: '445.0.0'
      #     # service_account_email: ${{ secrets.GKE_EMAIL }}
      #     # service_account_key: ${{ secrets.GKE_KEY }}
      # - run: |
      #     # Set up docker to authenticate
      #     # via gcloud command-line tool.
      #     gcloud auth configure-docker
      # - name: Setup .env file
      #   run: |
      #     echo GIPHY_API_KEY=${{ secrets.GIPHY_API }} > cmd/.env
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - name: Deploy
        run: |
          # gcloud container clusters get-credentials $GKE_CLUSTER \
          #   --zone $GKE_ZONE \
          #   --project $GKE_PROJECT
          helm upgrade ${{ inputs.release_name }} helm/${{ inputs.namespace }}/ \
            -f env/values-kub-ent-${{ inputs.environment }}.yaml \
            --set common.container.image=${{ inputs.image_tag }} \
            --atomic
          kubectl -n ${{ inputs.namespace }} rollout status deployment/${{ inputs.release_name}}
          kubectl get services -o wide
