name: Terraform apply

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        default: dev
      tf_version:
        required: false
        type: string
        default: 1.1.0

jobs:
  terraform-check:
    name: Check for terraform changes
    permissions:
      pull-requests: read
    runs-on: ubuntu-latest
    outputs:
      found_changes: ${{ steps.filter.outputs.terraform }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v2
      name: Check for terraform changes
      id: filter
      with:
        filters: |
          terraform:
            - 'terraform/**'

  terraform-apply:
    name: Apply terraform changes
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    needs: terraform-check
    # if: github.event.pull_request.merged == true && needs.terraform-check.outputs.found_changes == 'true'
    if: needs.terraform-check.outputs.found_changes == 'true'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - name: Terraform apply
        uses: entur/tmp-github-actions-2/.github/actions/tf-apply@master
        with:
          tf_directory: "terraform"
          tf_version: ${{ inputs.tf_version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          environment: ${{ inputs.environment }}
          provider_name: ${{ secrets[format('{0}_PROVIDER_NAME', inputs.environment)] }}
          sa_email: ${{ secrets[format('{0}_SA_EMAIL', inputs.environment)] }}
          cluster_project_id: ${{ secrets[format('{0}_CLUSTER_PROJECT_ID', inputs.environment)] }}
          cluster_name: ${{ secrets[format('{0}_CLUSTER_NAME', inputs.environment)] }}
          cluster_location: ${{ secrets[format('{0}_CLUSTER_LOCATION', inputs.environment)] }}
