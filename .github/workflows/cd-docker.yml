name: CD Docker

on:
  workflow_call:
    inputs:
      watch:
        type: string
        default: src
      environment:
        type: string
        default: prd
      app_name:
        required: true
        type: string
      download_artifact:
        type: boolean
        default: true

jobs:
  watch-filter:
    name: Check if application changes
    permissions:
      pull-requests: read
    runs-on: ubuntu-latest
    outputs:
      found-changes: ${{ steps.filter.outputs.changes }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v2
      name: Check if application changes
      id: filter
      with:
        filters: |
          changes:
            - '${{ inputs.watch }}/**'
  cd-docker:
    name: CD Docker
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    runs-on: ubuntu-latest
    if: needs.watch-filter.outputs.found-changes == 'true'
    steps:
      - uses: actions/checkout@v4
      - id: auth
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets[format('{0}_PROVIDER_NAME', inputs.environment)] }}
          service_account: ${{ secrets[format('{0}_SA_EMAIL', inputs.environment)] }}
          token_format: 'access_token'
      - name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: eu.gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Download application build/jar
        uses: actions/download-artifact@v3
        if: inputs.download_artifact
        with:
          name: ${{ github.event.pull_request.number }}-${{ inputs.app_name }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            eu.gcr.io/entur-system-1287/${{ inputs.app_name }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha     
      - name: Set up Docker build
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
